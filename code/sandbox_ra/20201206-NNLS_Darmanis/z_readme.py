# RA, 2021-01-08

from twig import log

from datetime import datetime, timezone
from contextlib import redirect_stdout
from pathlib import Path

from tcga.utils import relpath, First

time = datetime.now(tz=timezone.utc).strftime("%Z-%Y%m%d-%H%M%S")
this = Path(__file__)

preambulations = F"""
Barebones implementation of 
nonnegative least squares (NNLS)
for 
cell type proportion inference.

The [bulk](../../../data/20201128-FGCZ)
and 
[reference](../../../data/20201206-RefDatasets/2015-Darmanis)
datasets are first subset to the common genes.
The counts are normalized to sum=1.
The genes are again subset to a set of marker genes
(see [datasource.py](datasource.py)).

See [a_deconvolution0.py](a_deconvolution0.py)
for the minimal implementation
and the folder [a_deconvolution0](a_deconvolution0)
for the results.

To check the stability of the results
with respect to the reference dataset,
we performed multiple deconvolution runs of NNLS
where in each run a random subset of 50% 
of reference single cells was kept.
The following figures show the distribution
of the resulting cell type proportions.
The additional cross indicates the estimate 
from [MuSiC](https://numpde.github.io/sta426_deconvo/code/sandbox_ra/20201226-AllDeco/deconvolution.html).

This file was generated by [{this.name}]({this.name}). 
"""

with redirect_stdout((this.parent / "readme.md").open('w')):
    print(preambulations)
    print()


    def img(x):
        log.info(x)
        print(F"#### {x.stem}")
        print()
        # (F"![<img src='{x}' width='360px'/>]({x})")
        print(F"<img src='{x}' width='360px'/>")
        print()


    f = First((this.parent / "a_deconvolution3/frac=0.5/").glob).each(relpath).each(Path).then(sorted)

    print("### Inferred cell types")
    print()

    for x in f("*.png"):
        img(x)
